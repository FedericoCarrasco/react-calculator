{"version":3,"sources":["App.js","index.js"],"names":["App","useState","previousNumber","setPreviousNumber","currentNumber","setCurrentNumber","undefined","operation","setOperation","writeNumber","number","includes","toString","compute","previous","parseFloat","current","isNaN","chooseOperation","newOperation","formatNumber","integerDisplay","stringNumber","integerDigits","split","decimalDigits","toLocaleString","maximumFractionDigits","className","onClick","slice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17f4eaaa.chunk.js","sourcesContent":["import { useState } from \"react\"\n\nfunction App() {\n\n  const [previousNumber, setPreviousNumber] = useState('')\n  const [currentNumber, setCurrentNumber] = useState('')\n  const [operation, setOperation] = useState(undefined)\n\n  function writeNumber(number) {\n    if (number === '.' && currentNumber.includes('.')) return\n    else if (number === '.' && currentNumber === '') { {setCurrentNumber('0')}\n    }\n    setCurrentNumber(currentNumber => currentNumber.toString() + number.toString())\n  }\n\n  function compute() {\n    const previous = parseFloat(previousNumber)\n    const current = parseFloat(currentNumber)\n    if (isNaN(previous) || isNaN(current)) return\n    switch (operation) {\n      case '+':\n        return(previous + current).toString()\n      case '-':\n        return(previous - current).toString()\n      case 'x':\n        return(previous * current).toString()\n      case 'รท':\n        return(previous / current).toString()\n      default:\n        return\n    }\n  }\n\n  function clear() {\n    setPreviousNumber('')\n    setCurrentNumber('')\n    setOperation(undefined)\n  }\n\n  function del() {\n    setCurrentNumber(currentNumber => currentNumber.toString().slice(0, -1))\n  }\n\n  function changeSign() {\n    if (currentNumber === '' || currentNumber === '0.') return\n    setCurrentNumber(currentNumber => currentNumber * (-1))\n    setCurrentNumber(currentNumber => currentNumber.toString())\n  }\n\n  function chooseOperation(newOperation) {\n    if (currentNumber === '' && previousNumber === '') return\n    if (currentNumber === '') {\n      setOperation(newOperation)\n      return\n    }\n    if (previousNumber !== '') {\n      setPreviousNumber(compute())\n      setOperation(newOperation)\n      setCurrentNumber('')\n      return\n    }\n    setOperation(newOperation)\n    setPreviousNumber(currentNumber)\n    setCurrentNumber('')\n  }\n\n  function formatNumber(number) {\n    const stringNumber = number.toString()\n    const integerDigits = parseFloat(stringNumber.split('.')[0])\n    const decimalDigits = stringNumber.split('.')[1]\n    let integerDisplay\n    if (isNaN(integerDigits)) {\n      integerDisplay = ''\n    }\n    else {\n      integerDisplay = integerDigits.toLocaleString('en', {maximumFractionDigits: 0})\n    }\n    if (decimalDigits != null) {\n      return `${integerDisplay}.${decimalDigits}`\n    }\n    else {\n      return integerDisplay\n    }\n  }\n\n  return (\n    <div className=\"calculator\">\n      <div className=\"display\">\n        <div className=\"previous-number\">{formatNumber(previousNumber)} {operation}</div>\n        <div className=\"current-number\">{formatNumber(currentNumber)}</div>\n      </div>\n      <button onClick={clear}>AC</button>\n      <button onClick={del}>D</button>\n      <button onClick={changeSign}>+/-</button>\n      <button onClick={() => chooseOperation('รท')}>รท</button>\n      <button onClick={() => writeNumber(7)}>7</button>\n      <button onClick={() => writeNumber(8)}>8</button>\n      <button onClick={() => writeNumber(9)}>9</button>\n      <button onClick={() => chooseOperation('x')}>x</button>\n      <button onClick={() => writeNumber(4)}>4</button>\n      <button onClick={() => writeNumber(5)}>5</button>\n      <button onClick={() => writeNumber(6)}>6</button>\n      <button onClick={() => chooseOperation('-')}>-</button>\n      <button onClick={() => writeNumber(1)}>1</button>\n      <button onClick={() => writeNumber(2)}>2</button>\n      <button onClick={() => writeNumber(3)}>3</button>\n      <button onClick={() => chooseOperation('+')}>+</button>\n      <div></div>\n      <button onClick={() => writeNumber(0)}>0</button>\n      <button onClick={() => writeNumber('.')}>.</button>\n      <button onClick={() =>\n        {\n          setCurrentNumber(compute())\n          setOperation(undefined)\n          setPreviousNumber('')\n        }}>=</button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"container\">\n      <div></div>\n      <App />\n      <div></div>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}